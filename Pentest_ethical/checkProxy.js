const axios = require('axios');

// List of French proxies to check (both HTTP and HTTPS)
const frenchProxies = [
    '87.98.148.98:80',
    '20.111.54.16:8123',
    '51.210.54.186:80',
    '217.182.210.152:80',
    '51.254.78.223:80',
    '163.172.33.137:4137',
    '54.38.181.125:80',
    '193.253.220.32:80',
    '80.13.43.193:80',
    '149.202.91.219:80',
    '146.59.202.70:80'
];

// Function to check a proxy
async function checkProxy(proxy, protocol = 'http') {
    try {
        const [host, port] = proxy.split(':');
        const response = await axios.get(`${protocol}://www.netflix.com`, {
            proxy: {
                host: host,
                port: parseInt(port)
            },
            timeout: 10000 // 10 seconds timeout
        });

        if (response.status === 200 || response.status === 302) {
            console.log(`Proxy ${proxy} is working.`);
        } else {
            console.log(`Proxy ${proxy} returned status ${response.status}.`);
        }
    } catch (error) {
        if (error.code === 'ECONNABORTED') {
            console.log(`Proxy ${proxy} failed: timeout of 10000ms exceeded`);
        } else if (error.code === 'EPROTO') {
            console.log(`Proxy ${proxy} failed: SSL error, wrong version number (likely HTTP/HTTPS mismatch)`);
        } else {
            console.log(`Proxy ${proxy} failed: ${error.message}`);
        }
    }
}

// Test all proxies
(async () => {
    for (const proxy of frenchProxies) {
        console.log(`Testing proxy: ${proxy}`);
        // Try with both HTTP and HTTPS
        await checkProxy(proxy, 'http');   // Try HTTP first
        await checkProxy(proxy, 'https');  // Then try HTTPS
    }
})();
