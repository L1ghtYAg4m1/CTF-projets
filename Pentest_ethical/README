Puppeteer-based CAPTCHA Bypassing Tool for Pentesting 

Disclaimer

This tool is intended for educational purposes and authorized penetration testing only. Unauthorized use against systems without proper consent is illegal and unethical. Always ensure you have explicit permission before using this tool.

Overview

This script leverages Puppeteer, a headless browser automation library, enhanced with stealth capabilities and proxy integration. It uses Anti-Captcha's service to bypass Google reCAPTCHA challenges during pentesting activities. This can help identify vulnerabilities in web applications relying on CAPTCHA for bot prevention.

Features

Stealth Browsing: Uses the puppeteer-extra-plugin-stealth to evade detection as a bot.

Proxy Support: Routes requests through French proxies for geolocation-specific testing.

CAPTCHA Solving: Automates solving of reCAPTCHA v3 challenges using the Anti-Captcha API.

Cluster Support: Designed for scalable pentesting with multi-threading support using Node.js clusters.

File Logging: Categorizes phone numbers or other results based on their status.

Prerequisites

Node.js and npm installed.

An Anti-Captcha API key.

A list of valid proxy addresses.

Permissions for conducting pentests.

Installation

Clone the repository:

git clone https://github.com/your-repo/pentest-captcha-tool.git
cd pentest-captcha-tool

Install dependencies:

npm install puppeteer-extra puppeteer-extra-plugin-stealth axios

Replace the following in the script:

API_KEY with your Anti-Captcha API key.

frenchProxies array with valid proxy addresses.

How It Works

Stealth Browsing

The script integrates the stealth plugin for Puppeteer, minimizing the chance of detection as an automated bot by websites.

Proxy Integration

Requests are routed through French proxies to simulate local traffic and test geo-restricted applications.

CAPTCHA Bypassing Workflow

Create a CAPTCHA Task:

Sends a request to the Anti-Captcha API to create a task for solving a reCAPTCHA v3 challenge.

Requires the target website's URL and the reCAPTCHA key.

Fetch Task Results:

Polls the Anti-Captcha API until the CAPTCHA solution is available.

The solution is returned as a token for further use.

Usage in Pentests:

Once solved, the token can be used to bypass CAPTCHA-protected endpoints during pentesting.

File Logging

The script includes functionality to append phone numbers or other data to files based on their processing status, aiding in data categorization and reporting.
